// As simple as it gets: 1-core system with 2 short processes

sys = {

    //frequency = 3210;
    frequency = 2000;
	networkFile = "/nethome/acho44/zsim/zSim/tests/network.conf";
    
	cores = {
        OCore1 = {
			cores = 64; //num_server
            type = "OOO";
            dcache = "cl1d";
            icache = "cl1i";
            app_core = 1;
            ingress = "llc";
            egress = "llc_non_inval";
        };
    };


    lineSize = 64;

 
    caches = {
        cl1d = {
			caches = 64; //num_server
            size = 32768; //65536;
            array = {
                type = "SetAssoc";
                ways = 8;
            }
            latency = 4;
        };
        cl1i = {
			caches =64; //16; //num_server
            size = 32768;
            array = {
                type = "SetAssoc";
                ways = 8;
            }
            latency = 4;
        };
        l2 = {
            caches = 64; //num_server 
            size = 524288;
            children = "cl1d|cl1i";  // interleave 
            latency = 14;
            array = {
                type = "SetAssoc";
                ways = 20;
            };

        };
        l3 = {
            banks = 64;
            caches = 1;
            //latency = 35;
            latency = 46;
            //size = 37748736; //36MB
			size = 268435456; //256MB
            type="Timing";
            nonInclusiveHack = True;
			mshrs = 128;
            children = "l2";
            array = {
                type = "SetAssoc";
                ways = 16;
            }
            repl = {
                type = "DDIOPart";
                partMapper = "DDIO";
                ddio_ways = 2;
            }
        }
    };

	//mem = {
    //    type = "Simple";
    //    latency = 150;
    //    controllers = 6;
    //    //tech = "DDR3-1066-CL8";
    //};

    mem = {
        type = "DDR";
        //latency = 100;
        controllers = 8;
        tech = "DDR4-3200";
		splitAddrs=False;
    	//tech = "DDR3-1333-CL10";
        //tech = "DDR3-1066-CL8";
    };
};

sim = {
    phaseLength = 1000;
	//packet_count = 100000;
	packet_count = 500000;
	//packet_count = 30000;
    schedQuantum = 50;  // switch threads frequently
    
    num_cores_serving_nw = 0; //explicitly set this to 0. default assumes all cores are nw cores
    // attachDebugger = True;
    //procStatsFilter = "l1.*|l2.*";
    //num_cores_serving_nw = 64; //num_server
    //num_non_net_cores = 0;

    //packet_injection_rate = 16;
    //num_keys=1024;
    //update_fraction=25;

    //send_in_loop=false;
	//load_dist=0; //0: uniform, 1: skew(zipf)
	//arrival_dist=0; //0: uniform, 1: piosson
	//load_balance=0; //0: perfect, 1: random
    //forced_packet_size=1024;
	//recv_buf_pool_size = 1048576

	//clean_recv=0;

    
	//gmMBytes=65536;
	gmMBytes=131072;
	//gmMBytes=262144;

    #load_gen = {
    #    lg1={
    #        type=0; //0: HERD
    #        //type=1; //0: l3fwd
    #        packet_injection_rate=10;
    #        num_keys=16;
    #        update_fraction=5; 
    #        assoc_cores=64; //num_server
    #    }
    #}

};

process0 = {
dumpsResetHeartbeats=true;
dumpHeartbeats=64L;
    //command = "~/zsim/zSim/tests/memhog_mt --start-core 0 --num-threads 8 --ws_size 8388608";
    command = "~/zsim/zSim/tests/memhog_mt --start-core 0 --num-threads 64 --ws_size 8388608";
};

