// As simple as it gets: 1-core system with 2 short processes

sys = {

    frequency = 2500;
    networkFile = "/nethome/mvemmou3/zSim/network.conf";

    cores = {
    	NicInCore = {
            type = "OOO";
            dcache = "ncinl1d";
            icache = "ncinl1i";
            ingress = "mem";
            egress = "mem";
        };
        NicEgCore = {
            type = "OOO";
            dcache = "ncoutl1d";
            icache = "ncoutl1i";
            ingress = "mem";
            egress = "mem";
        };
        herdSpawnCore = {
            type = "OOO";
            dcache = "hscl1d";
            icache = "hscl1i";
            ingress = "mem";
            egress = "mem";
        };

        OCore1 = {
			cores = 18; 
            type = "OOO";
            dcache = "cl1d";
            icache = "cl1i";
            app_core = 1;
            ingress = "mem";
            egress = "mem";
        };
    };


    lineSize = 64;

 
    caches = {
        ncinl1d = {
            size = 32768; //65536;
        };
        ncinl1i = {
            size = 32768;
        };
        ncoutl1d = {
            size = 32768; //65536;
        };
        ncoutl1i = {
            size = 32768;
        };
       	hscl1d = {
            size = 32768; //65536;
        };
        hscl1i = {
            size = 32768;
        };

        cl1d = {
			caches = 18; 
            size = 32768; //65536;
            array = {
                type = "SetAssoc";
                ways = 8;
            }
            latency = 4;
        };
        cl1i = {
			caches = 18; 
            size = 32768;
            array = {
                type = "SetAssoc";
                ways = 8;
            }
            latency = 4;
        };
        l2 = {
            caches = 18; 
            size = 1048576;
            children = "cl1d|cl1i";  // interleave 
            latency = 14;
            array = {
                type = "SetAssoc";
                ways = 16;
            };

        };
        l3 = {
            banks = 18;
            caches = 1;
            latency = 35;
            size = 25952256; //24.75 MB  //16777216;        // 16 MB
            type="Timing";
            nonInclusiveHack = True;
			mshrs = 32;
            children = "ncinl1i|ncinl1d ncoutl1i|ncoutl1d hscl1i|hscl1d l2";
            array = {
                type = "SetAssoc";
                ways = 11;
            }
            repl = {
                type = "DDIOPart";
                partMapper = "DDIO";
                ddio_ways = 2;
                mapping = {
                }
            }
        }
    };

    mem = {
        type = "DDR";
        controllers = 6;
        no_latency = false;
        no_bw = false;
        tech = "DDR4-2400";
    };
};

sim = {
    phaseLength = 1000;
	packet_count = 500000;
    schedQuantum = 50;  // switch threads frequently
    
    // attachDebugger = True;
    //procStatsFilter = "l1.*|l2.*";
    num_cores_serving_nw = 18;  //num_server
    num_non_net_cores = 0;

    send_in_loop= false;
	load_dist= 1;
	arrival_dist= 0;
	load_balance= 0;

    forced_packet_size = 512;
    recv_buf_pool_size = 262144;

    gmMBytes=20480;//131072;

    clean_recv = 0;

    load_gen = {
        lg1={
            type=0; //0: HERD
            packet_injection_rate= 33;
            num_keys= 1024;
            update_fraction= 5;
            assoc_cores= 18;    //num_server
        }
    }

};

process0 = {
    command = "./nic_proxy_app";
};

process1 = {
    command = "./nic_egress_proxy_app";
};


process2 = {
    dumpsResetHeartbeats=true;
    dumpHeartbeats=18L; 
    command = "./herd \
--is-client 0 \
--start-core 3 \
--machine-id 1 \
--total-nodes 1 \
--qps-to-create 18 \
--num-threads 18 \
--num-keys 1024 \
--num-server-buckets 1048576 \
--log-capacity-bytes 4194304";
};


//process2 = {
//    command = "/nethome/mvemmou3/X-Mem/bin/xmem-linux-x64 -t -r -W -j1 -w1024 -d15 -u"
//}

//process3 = {
//    command = "/nethome/mvemmou3/X-Mem/bin/xmem-linux-x64 -t -r -W -j1 -w10240 -d17 -u"
//}
